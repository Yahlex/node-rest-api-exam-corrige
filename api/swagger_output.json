{
  "swagger": "2.0",
  "info": {
    "title": "web API RESTful",
    "description": "Starter pack",
    "version": "1.0.0"
  },
  "host": "localhost:5001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/foobar": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Some description...",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "age": {
                  "type": "number",
                  "example": 29
                },
                "about": {
                  "type": "string",
                  "example": ""
                }
              },
              "required": [
                "name",
                "age"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/concerts": {
      "get": {
        "summary": "Liste des concerts",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/concerts/{id}": {
      "get": {
        "summary": "Détail d'un concert",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/concerts/{id}/reservation": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pseudo",
            "in": "formData",
            "description": "Le pseudo de l'utilisateur qui effectue la réservation",
            "required": true,
            "type": "string",
            "format": "application/x-www-form-urlencoded"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "pseudo": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/utilisateurs": {
      "get": {
        "summary": "Liste des utilisateurs",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/protected": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "bearerFormat": "JWT"
          }
        ]
      }
    }
  }
}